{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-231a4f58\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"weather-widget\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"widget-title\"\n}, \"Weather Widget\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"location-input\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"location\"\n}, \"Enter Location:\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  key: 0,\n  class: \"weather-data\"\n};\nconst _hoisted_6 = {\n  class: \"location\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"temperature\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"description\"\n};\nconst _hoisted_9 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"location\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.location = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.location]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fetchWeatherData && $options.fetchWeatherData(...args))\n  }, \"Get Weather\")]), $data.weatherData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"p\", _hoisted_6, \"Location: \" + _toDisplayString($data.weatherData.name), 1 /* TEXT */), $data.weatherData.main ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \" Temperature: \" + _toDisplayString($data.weatherData.main.temp) + \"°C \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.weatherData.weather ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \" Description: \" + _toDisplayString($data.weatherData.weather[0].description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \"Loading weather data...\"))]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","type","id","$data","location","$event","onClick","_cache","args","$options","fetchWeatherData","weatherData","_hoisted_5","_hoisted_6","_toDisplayString","name","main","_hoisted_7","temp","weather","_hoisted_8","description","_hoisted_9"],"sources":["D:\\joanrisky-uas\\src\\components\\WeatherWidget.vue"],"sourcesContent":["<template>\n  <div class=\"weather-widget\">\n    <h2 class=\"widget-title\">Weather Widget</h2>\n    <div class=\"location-input\">\n      <label for=\"location\">Enter Location:</label>\n      <input type=\"text\" id=\"location\" v-model=\"location\" />\n      <button @click=\"fetchWeatherData\">Get Weather</button>\n    </div>\n    <div v-if=\"weatherData\" class=\"weather-data\">\n      <p class=\"location\">Location: {{ weatherData.name }}</p>\n      <p v-if=\"weatherData.main\" class=\"temperature\">\n        Temperature: {{ weatherData.main.temp }}°C\n      </p>\n      <p v-if=\"weatherData.weather\" class=\"description\">\n        Description: {{ weatherData.weather[0].description }}\n      </p>\n    </div>\n    <p v-else>Loading weather data...</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      location: '',\n      weatherData: null\n    };\n  },\n  methods: {\n    async fetchWeatherData() {\n      try {\n        const apiKey = 'b7bfca7b27a3485144fea086c50d09dc';\n        const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${this.location}&appid=${apiKey}`;\n\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n\n        this.weatherData = data;\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.weather-widget {\n  border: 1px solid #ccc;\n  padding: 20px;\n  margin-bottom: 20px;\n  text-align: center;\n  background-color: #f2f2f2;\n}\n\n.widget-title {\n  margin-top: 0;\n  color: #333;\n}\n\n.location-input {\n  margin-bottom: 10px;\n}\n\n.weather-data {\n  margin-top: 10px;\n}\n\n.location {\n  font-size: 18px;\n  font-weight: bold;\n}\n\n.temperature {\n  font-size: 24px;\n  color: #ff5722;\n}\n\n.description {\n  font-size: 16px;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAA4C;EAAxCD,KAAK,EAAC;AAAc,GAAC,gBAAc;;EAClCA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAA6C;EAAtCC,GAAG,EAAC;AAAU,GAAC,iBAAe;;;EAIfF,KAAK,EAAC;;;EACzBA,KAAK,EAAC;AAAU;;;EACQA,KAAK,EAAC;;;;EAGHA,KAAK,EAAC;;;;;;uBAZxCG,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJC,UAA4C,EAC5CJ,mBAAA,CAIM,OAJNK,UAIM,GAHJC,UAA6C,E,gBAC7CN,mBAAA,CAAsD;IAA/CO,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,UAAU;+DAAUC,KAAA,CAAAC,QAAQ,GAAAC,MAAA;iDAARF,KAAA,CAAAC,QAAQ,E,GAClDV,mBAAA,CAAsD;IAA7CY,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;KAAE,aAAW,E,GAEpCL,KAAA,CAAAQ,WAAW,I,cAAtBf,mBAAA,CAQM,OARNgB,UAQM,GAPJlB,mBAAA,CAAwD,KAAxDmB,UAAwD,EAApC,YAAU,GAAAC,gBAAA,CAAGX,KAAA,CAAAQ,WAAW,CAACI,IAAI,kBACxCZ,KAAA,CAAAQ,WAAW,CAACK,IAAI,I,cAAzBpB,mBAAA,CAEI,KAFJqB,UAEI,EAF2C,gBAChC,GAAAH,gBAAA,CAAGX,KAAA,CAAAQ,WAAW,CAACK,IAAI,CAACE,IAAI,IAAG,KAC1C,mB,mCACSf,KAAA,CAAAQ,WAAW,CAACQ,OAAO,I,cAA5BvB,mBAAA,CAEI,KAFJwB,UAEI,EAF8C,gBACnC,GAAAN,gBAAA,CAAGX,KAAA,CAAAQ,WAAW,CAACQ,OAAO,IAAIE,WAAW,oB,sDAGtDzB,mBAAA,CAAqC,KAAA0B,UAAA,EAA3B,yBAAuB,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}