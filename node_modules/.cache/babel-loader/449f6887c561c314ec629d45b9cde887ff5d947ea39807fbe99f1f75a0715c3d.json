{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-415b4bd4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"photo-widget\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString($data.title), 1 /* TEXT */), _createElementVNode(\"img\", {\n    src: $data.photoUrl,\n    alt: $data.title\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.getRandomPhoto && $options.getRandomPhoto(...args))\n  }, \"Load New Photo\")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","title","src","photoUrl","alt","onClick","_cache","args","$options","getRandomPhoto"],"sources":["D:\\joanrisky-uas\\src\\components\\PhotoWidget.vue"],"sourcesContent":["<template>\n  <div class=\"photo-widget\">\n    <h2>{{ title }}</h2>\n    <img :src=\"photoUrl\" :alt=\"title\" />\n    <button @click=\"getRandomPhoto\">Load New Photo</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      title: '',\n      photoUrl: '',\n    };\n  },\n  mounted() {\n    this.getRandomPhoto();\n  },\n  methods: {\n    async getRandomPhoto() {\n      try {\n        const apiKey = '38037020-2c48722c03be8437a05b588e6';\n        const apiUrl = `https://pixabay.com/api/?key=${apiKey}&q=nature&image_type=photo&orientation=horizontal`;\n\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n\n        const randomIndex = Math.floor(Math.random() * data.hits.length);\n        const randomPhoto = data.hits[randomIndex];\n\n        this.title = randomPhoto.tags;\n        this.photoUrl = randomPhoto.webformatURL;\n      } catch (error) {\n        console.error('Error fetching random photo:', error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.photo-widget {\n  border: 1px solid #ccc;\n  padding: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.photo-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  max-width: 500px;\n  margin-top: 10px;\n}\n\n.photo-container img {\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.photo-widget button {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAc;;;uBAAzBC,mBAAA,CAIM,OAJNC,UAIM,GAHJC,mBAAA,CAAoB,YAAAC,gBAAA,CAAbC,KAAA,CAAAC,KAAK,kBACZH,mBAAA,CAAoC;IAA9BI,GAAG,EAAEF,KAAA,CAAAG,QAAQ;IAAGC,GAAG,EAAEJ,KAAA,CAAAC;uCAC3BH,mBAAA,CAAuD;IAA9CO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,gBAAc,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}