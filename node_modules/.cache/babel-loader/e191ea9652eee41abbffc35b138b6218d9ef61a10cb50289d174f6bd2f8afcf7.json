{"ast":null,"code":"export default {\n  data() {\n    return {\n      board: ['', '', '', '', '', '', '', '', ''],\n      currentPlayer: 'X',\n      isGameEnded: false,\n      scores: {\n        X: 0,\n        O: 0\n      }\n    };\n  },\n  computed: {\n    status() {\n      if (this.isGameEnded) {\n        return 'Game Over!';\n      }\n      return `Player ${this.currentPlayer}'s turn`;\n    }\n  },\n  methods: {\n    handleClick(index) {\n      if (!this.isGameEnded && this.board[index] === '') {\n        this.board[index] = this.currentPlayer;\n        this.checkWinner();\n        this.currentPlayer = this.currentPlayer === 'X' ? 'O' : 'X';\n      }\n    },\n    checkWinner() {\n      const winningCombinations = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n      // Rows\n      [0, 3, 6], [1, 4, 7], [2, 5, 8],\n      // Columns\n      [0, 4, 8], [2, 4, 6] // Diagonals\n      ];\n\n      for (const combination of winningCombinations) {\n        const [a, b, c] = combination;\n        if (this.board[a] && this.board[a] === this.board[b] && this.board[a] === this.board[c]) {\n          this.isGameEnded = true;\n          this.scores[this.board[a]]++;\n          return;\n        }\n      }\n    },\n    resetGame() {\n      this.board = ['', '', '', '', '', '', '', '', ''];\n      this.currentPlayer = 'X';\n      this.isGameEnded = false;\n    }\n  }\n};","map":{"version":3,"names":["data","board","currentPlayer","isGameEnded","scores","X","O","computed","status","methods","handleClick","index","checkWinner","winningCombinations","combination","a","b","c","resetGame"],"sources":["D:\\joanrisky-uas\\src\\components\\TicTacToeWidget.vue"],"sourcesContent":["<template>\n  <div class=\"tic-tac-toe-widget\">\n    <h2>Tic Tac Toe</h2>\n    <div class=\"board\">\n      <div v-for=\"(cell, index) in board\" :key=\"index\" @click=\"handleClick(index)\">{{ cell }}</div>\n    </div>\n    <button @click=\"resetGame\">Reset</button>\n    <p>{{ status }}</p>\n    <div class=\"score\">\n      <p>Player X: {{ scores.X }}</p>\n      <p>Player O: {{ scores.O }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      board: ['', '', '', '', '', '', '', '', ''],\n      currentPlayer: 'X',\n      isGameEnded: false,\n      scores: {\n        X: 0,\n        O: 0,\n      },\n    };\n  },\n  computed: {\n    status() {\n      if (this.isGameEnded) {\n        return 'Game Over!';\n      }\n      return `Player ${this.currentPlayer}'s turn`;\n    },\n  },\n  methods: {\n    handleClick(index) {\n      if (!this.isGameEnded && this.board[index] === '') {\n        this.board[index] = this.currentPlayer;\n        this.checkWinner();\n        this.currentPlayer = this.currentPlayer === 'X' ? 'O' : 'X';\n      }\n    },\n    checkWinner() {\n      const winningCombinations = [\n        [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows\n        [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns\n        [0, 4, 8], [2, 4, 6], // Diagonals\n      ];\n\n      for (const combination of winningCombinations) {\n        const [a, b, c] = combination;\n        if (this.board[a] && this.board[a] === this.board[b] && this.board[a] === this.board[c]) {\n          this.isGameEnded = true;\n          this.scores[this.board[a]]++;\n          return;\n        }\n      }\n    },\n    resetGame() {\n      this.board = ['', '', '', '', '', '', '', '', ''];\n      this.currentPlayer = 'X';\n      this.isGameEnded = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.tic-tac-toe-widget {\n  border: 1px solid #ccc;\n  padding: 20px;\n  margin-bottom: 20px;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 10px;\n  margin-bottom: 10px;\n}\n\n.board div {\n  border: 1px solid #ccc;\n  padding: 0;\n  flex-grow: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n}\n\nbutton {\n  margin-top: 10px;\n}\n\n.score {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n}\n\n.score p {\n  margin: 0;\n}\n</style>\n"],"mappings":"AAgBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC3CC,aAAa,EAAE,GAAG;MAClBC,WAAW,EAAE,KAAK;MAClBC,MAAM,EAAE;QACNC,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE;MACL;IACF,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAACL,WAAW,EAAE;QACpB,OAAO,YAAY;MACrB;MACA,OAAQ,UAAS,IAAI,CAACD,aAAc,SAAQ;IAC9C;EACF,CAAC;EACDO,OAAO,EAAE;IACPC,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAI,CAAC,IAAI,CAACR,WAAU,IAAK,IAAI,CAACF,KAAK,CAACU,KAAK,MAAM,EAAE,EAAE;QACjD,IAAI,CAACV,KAAK,CAACU,KAAK,IAAI,IAAI,CAACT,aAAa;QACtC,IAAI,CAACU,WAAW,CAAC,CAAC;QAClB,IAAI,CAACV,aAAY,GAAI,IAAI,CAACA,aAAY,KAAM,GAAE,GAAI,GAAE,GAAI,GAAG;MAC7D;IACF,CAAC;IACDU,WAAWA,CAAA,EAAG;MACZ,MAAMC,mBAAkB,GAAI,CAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAE;MACjC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAE;MACjC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAE;MAAA,CACvB;;MAED,KAAK,MAAMC,WAAU,IAAKD,mBAAmB,EAAE;QAC7C,MAAM,CAACE,CAAC,EAAEC,CAAC,EAAEC,CAAC,IAAIH,WAAW;QAC7B,IAAI,IAAI,CAACb,KAAK,CAACc,CAAC,KAAK,IAAI,CAACd,KAAK,CAACc,CAAC,MAAM,IAAI,CAACd,KAAK,CAACe,CAAC,KAAK,IAAI,CAACf,KAAK,CAACc,CAAC,MAAM,IAAI,CAACd,KAAK,CAACgB,CAAC,CAAC,EAAE;UACvF,IAAI,CAACd,WAAU,GAAI,IAAI;UACvB,IAAI,CAACC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACc,CAAC,CAAC,CAAC,EAAE;UAC5B;QACF;MACF;IACF,CAAC;IACDG,SAASA,CAAA,EAAG;MACV,IAAI,CAACjB,KAAI,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACjD,IAAI,CAACC,aAAY,GAAI,GAAG;MACxB,IAAI,CAACC,WAAU,GAAI,KAAK;IAC1B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}